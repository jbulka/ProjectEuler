#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Euler Project: Problem 2

Each new term in the Fibonacci sequence is generated by adding the previous two
 terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed 
four million, find the sum of the even-valued terms.
"""

def main():
    
    # create a vector with the first two terms in the fibonacci sequence
    fib_vec = [1, 2]
    
    # create a vector withe just the even terms in the sequence, starting
    # with 2
    even_terms = [2]
    
    # append next term to the fibonacci sequence as long as the next term in 
    # fib_vec is less than 4,000,000
    while (fib_vec[len(fib_vec) - 1] + fib_vec[len(fib_vec) - 2]) < 4000000:
        next_term = fib_vec[len(fib_vec) - 1] + fib_vec[len(fib_vec) - 2]
        fib_vec = fib_vec + [next_term]
        if next_term % 2:
            even_terms = even_terms + [next_term]

    
    # find the sum of the even valued terms
    ans = sum(even_terms)
    
    # print the answer
    print(ans)
    
# run the program
if __name__ == '__main__':
    main()